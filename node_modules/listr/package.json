{
  "_args": [
    [
      {
        "raw": "listr@^0.4.3",
        "scope": null,
        "escapedName": "listr",
        "name": "listr",
        "rawSpec": "^0.4.3",
        "spec": ">=0.4.3 <0.5.0",
        "type": "range"
      },
      "/Users/petervirtanen/OneDrive/PhoneGap/TheLock2/node_modules/pluginpub"
    ]
  ],
  "_from": "listr@>=0.4.3 <0.5.0",
  "_id": "listr@0.4.3",
  "_inCache": true,
  "_location": "/listr",
  "_nodeVersion": "4.4.3",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/listr-0.4.3.tgz_1467740418524_0.2424146649427712"
  },
  "_npmUser": {
    "name": "samverschueren",
    "email": "sam.verschueren@gmail.com"
  },
  "_npmVersion": "2.15.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "listr@^0.4.3",
    "scope": null,
    "escapedName": "listr",
    "name": "listr",
    "rawSpec": "^0.4.3",
    "spec": ">=0.4.3 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pluginpub"
  ],
  "_resolved": "https://registry.npmjs.org/listr/-/listr-0.4.3.tgz",
  "_shasum": "2302cb24d2af02aad848d133119cbafffab9d23d",
  "_shrinkwrap": null,
  "_spec": "listr@^0.4.3",
  "_where": "/Users/petervirtanen/OneDrive/PhoneGap/TheLock2/node_modules/pluginpub",
  "author": {
    "name": "Sam Verschueren",
    "email": "sam.verschueren@gmail.com",
    "url": "github.com/SamVerschueren"
  },
  "bugs": {
    "url": "https://github.com/SamVerschueren/listr/issues"
  },
  "clinton": {
    "rules": {
      "editorconfig": "off"
    }
  },
  "dependencies": {
    "chalk": "^1.1.3",
    "figures": "^1.7.0",
    "indent-string": "^2.1.0",
    "is-stream": "^1.1.0",
    "log-symbols": "^1.0.2",
    "log-update": "^1.0.2",
    "ora": "^0.2.3",
    "stream-to-observable": "^0.1.0",
    "strip-ansi": "^3.0.1"
  },
  "description": "Terminal task list",
  "devDependencies": {
    "ava": "*",
    "clinton": "*",
    "rxjs": "^5.0.0-beta.9",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "2302cb24d2af02aad848d133119cbafffab9d23d",
    "tarball": "https://registry.npmjs.org/listr/-/listr-0.4.3.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "gitHead": "2d8180f8d6db7179be1f2c43952a8d396646af95",
  "homepage": "https://github.com/SamVerschueren/listr#readme",
  "keywords": [
    "cli",
    "task",
    "list",
    "tasklist",
    "terminal",
    "term",
    "console",
    "ascii",
    "unicode",
    "loading",
    "indicator",
    "progress",
    "busy",
    "wait",
    "idle"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "samverschueren",
      "email": "sam.verschueren@gmail.com"
    }
  ],
  "name": "listr",
  "optionalDependencies": {},
  "readme": "# listr [![Build Status](https://travis-ci.org/SamVerschueren/listr.svg?branch=master)](https://travis-ci.org/SamVerschueren/listr)\n\n> Terminal task list\n\n<img src=\"media/screenshot.gif\">\n\n## Install\n\n```\n$ npm install --save listr\n```\n\n\n## Usage\n\n```js\nconst execa = require('execa');\nconst Listr = require('listr');\n\nconst tasks = new Listr([\n\t{\n\t\ttitle: 'Git',\n\t\ttask: () => {\n\t\t\treturn new Listr([\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Checking git status',\n\t\t\t\t\ttask: () => execa.stdout('git', ['status', '--porcelain']).then(result => {\n\t\t\t\t\t\tif (result !== '') {\n\t\t\t\t\t\t\tthrow new Error('Unclean working tree. Commit or stash changes first.');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Checking remote history',\n\t\t\t\t\ttask: () => execa.stdout('git', ['rev-list', '--count', '--left-only', '@{u}...HEAD']).then(result => {\n\t\t\t\t\t\tif (result !== '0') {\n\t\t\t\t\t\t\tthrow new Error('Remote history differ. Please pull changes.');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t]);\n\t\t}\n\t},\n\t{\n\t\ttitle: 'Install package dependencies',\n\t\ttask: () => execa('npm', ['install'])\n\t},\n\t{\n\t\ttitle: 'Run tests',\n\t\ttask: () => execa('npm', ['test'])\n\t},\n\t{\n\t\ttitle: 'Publish package',\n\t\ttask: () => execa('npm', ['publish'])\n\t}\n]);\n\ntasks.run().catch(err => {\n\tconsole.error(err);\n});\n```\n\n\n### Task\n\nA `task` can return different values. If a `task` returns, it means the task was completed succesfully. If a task throws an error, the task failed.\n\n```js\nconst tasks = new Listr([\n\t{\n\t\ttitle: 'Success',\n\t\ttask: () => 'Foo'\n\t},\n\t{\n\t\ttitle: 'Failure',\n\t\ttask: () => {\n\t\t\tthrow new Error('Bar')\n\t\t}\n\t}\n]);\n```\n\n\n#### Promises\n\nA `task` can also be async by returning a `Promise`. If the promise resolves, the task completed sucessfully, it it rejects, the task failed.\n\n```js\nconst tasks = new Listr([\n\t{\n\t\ttitle: 'Success',\n\t\ttask: () => Promise.resolve('Foo');\n\t},\n\t{\n\t\ttitle: 'Failure',\n\t\ttask: () => Promise.reject('Bar')\n\t}\n]);\n```\n\n#### Observable\n\n<img src=\"media/observable.gif\" width=\"255\" align=\"right\">\n\nA `task` can also return an `Observable`. The thing about observables is that it can emit multiple values and can be used to show the output of the\ntask. Please note that only the last line of the output is rendered.\n\n```js\nconst tasks = new Listr([\n\t{\n\t\ttitle: 'Success',\n\t\ttask: () => {\n\t\t\treturn new Observable(observer => {\n\t\t\t\tobserver.next('Foo');\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tobserver.next('Bar');\n\t\t\t\t}, 2000);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tobserver.complete();\n\t\t\t\t}, 4000);\n\t\t\t});\n\t\t}\n\t},\n\t{\n\t\ttitle: 'Failure',\n\t\ttask: () => Promise.reject(new Error('Bar'))\n\t}\n]);\n```\n\n#### Streams\n\nIt's also possible to return a `stream`. The stream will be converted to an `Observable` and handled as such.\n\n\n## API\n\n### Listr([tasks])\n\n#### tasks\n\nType: `object[]`\n\nList of tasks.\n\n##### title\n\nType: `string`\n\nTitle of the task.\n\n##### task\n\nType: `Function`\n\nTask function.\n\n### Instance\n\n#### add(task)\n\nReturns the instance.\n\n##### task\n\nType: `object` `object[]`\n\nTask object or multiple task objects.\n\n#### run()\n\nStart executing the tasks.\n\n\n## Related\n\n- [ora](https://github.com/sindresorhus/ora) - Elegant terminal spinner\n- [cli-spinners](https://github.com/sindresorhus/cli-spinners) - Spinners for use in the terminal\n\n\n## License\n\nMIT Â© [Sam Verschueren](https://github.com/SamVerschueren)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/SamVerschueren/listr.git"
  },
  "scripts": {
    "test": "clinton && xo && ava"
  },
  "version": "0.4.3",
  "xo": {
    "esnext": true
  }
}
